services:

  postgres:
    image: postgres:12.20-bullseye
    container_name: postgres
    command: postgres -c wal_level=logical -c max_wal_senders=1 -c max_replication_slots=1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=root
      - POSTGRES_DB=university
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: zookeeper:3.9.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTERNERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  connect:
    image: quay.io/debezium/connect:2.7
    container_name: connect
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: 'connect_configs'
      OFFSET_STORAGE_TOPIC: 'connect_offsets'
      STATUS_STORAGE_TOPIC: 'connect_statuses'
      KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      VALUE_CONVERTER:  'org.apache.kafka.connect.json.JsonConverter'
      INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      # sem necessidade de plugins
      # PLUGIN_PATH: '/kafka/connect'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect'
    # sem necessidade de plugins
    # volumes:
    #   - ./plugins:/kafka/connect
